if(isNeedZxingModule.toBoolean()){
    apply plugin: 'com.android.library'
}else {
    apply plugin: 'com.android.application'
}


ext.artifactId = 'zxing-android-embedded'

dependencies {
    api 'com.google.zxing:core:3.3.2'
    api 'com.android.support:support-v4:28.0.0'

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.21.0"
}

android {
    resourcePrefix 'zxing_'
    compileSdkVersion project.androidTargetSdk
    buildToolsVersion project.androidBuildTools

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res-orig', 'res']
            assets.srcDirs = ['assets']
        }
        test.setRoot('test');
    }

    // This is bad practice - we should fix the warnings instead.
    lintOptions {
        // Android warns about the he and id locale folders. he -> iw is already handled with a
        // symlink. TODO: what about id?
        disable 'LocaleFolder'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        // We test with primitives such as Rect, and rely on their default behaviour working.
        unitTests.returnDefaultValues = true
    }
    defaultConfig {
        minSdkVersion project.minSdkVersion
    }

    buildTypes {
        debug {
            versionNameSuffix ".debug"
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}"
        }
        release {
            resValue "string", "app_version", "${defaultConfig.versionName}"
        }
    }

    sourceSets {
        main {
            if (!isNeedZxingModule.toBoolean()) {
                manifest.srcFile 'src/com/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'AndroidManifest.xml'
                java {
                    //全部Module一起编译的时候剔除debug目录
                    exclude '**/debug/**'
                }
            }
        }
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
